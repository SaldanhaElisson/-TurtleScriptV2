<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d72477f0-37db-41d9-b150-784f5412d6f0" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/Compiladores.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/PyCharmMiscProject.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/errors/Errors.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/errors/error_messages.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/errors/error_types.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pytest.ini" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/tokenizer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/errors/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/errors/error.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/errors/error_messages.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/errors/error_types.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/tokenizer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/lexer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/symbol_table.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/token_class.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/token_factory.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lexical_analyzer/utils/token_list.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/structs/gramatics.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/structs/lexer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/structs/symbol_table.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/structs/token_factory.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/structs/token_list.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/char_invalido.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/closed_delimiter.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/entrada1.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/entrada2.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/entrada3.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/exemplo.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/exemplo2.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/exemplo3.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/first_char_is_number_on_id.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/literal_not_closed.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/inputs/opened_delimiter.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/test_code_generator.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/test_parser.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/test_semantic_analyzer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/test_tokenizer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/test_turtle_scripts.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/trabalho.pdf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feat-lexical" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
<<<<<<< HEAD
=======
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "git@github.com:SaldanhaElisson/-TurtleScriptV2.git",
    "accountId": "ba8a9392-0424-473d-8002-226674dec00c"
  }
}]]></component>
>>>>>>> feat-lexical
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2zI3LazOPZyi2m5EJaqziQ4vpVB" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
<<<<<<< HEAD
    "Python tests.Python tests for calculate_first_set_for_sequence_test.TestCalculateFirstSetForSequence.executor": "Run",
    "Python tests.Python tests for calculate_first_set_for_sequence_test.TestFirstSets.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestCalculateFollowSet.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestFollowSets.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestFollowSets.test_grammar_with_epsilon_in_beta.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestFollowSets.test_grammar_with_left_recursion_removed_style.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestFollowSets.test_grammar_with_mutual_recursion_for_follow.executor": "Run",
    "Python tests.Python tests for calculate_follow_set_test.TestFollowSets.test_simple_grammar_no_epsilon.executor": "Run",
    "Python tests.Python tests for left_factoring_test.TestLeftFactoringConcise.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1ParseTable.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_empty_input.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_non_ll1_grammar.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_unexpected_symbol_on_stack.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_unmatched_terminal.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_valid_complex_expression.executor": "Run",
    "Python tests.Python tests for parse_test.TestLL1Parser.test_valid_simple_expression.executor": "Run",
    "Python tests.Python tests for parse_test.TestParseTreeGeneration.executor": "Run",
    "Python tests.Python tests for parse_test.TestParseTreeGeneration.test_valid_simple_expression_tree.executor": "Run",
    "Python tests.Python tests for remove_left_recursion_test.TestRemoveLeftRecursion.executor": "Run",
=======
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_first_symbol_is_number_error_with_analise_line.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_float_with_string_separator.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_list_token_and_symbols_with_analise_line.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_multiple_delimiter_with_string_separator.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_number_delimiters_error_with_analise_line.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_operators_with_string_separator.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_par_with_string_separator.executor": "Run",
    "Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_unknown_symbol_error_with_analise_line.executor": "Run",
    "Python.lexer.executor": "Debug",
    "Python.main.executor": "Run",
>>>>>>> feat-lexical
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
<<<<<<< HEAD
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "Merging feat/ll1-define-grammer",
    "last_opened_file_path": "/home/elisson/faculdade/TurtleScriptV2",
=======
    "git-widget-placeholder": "#7 on feat-lexical",
    "last_opened_file_path": "/home/andrade/-TurtleScriptV2",
>>>>>>> feat-lexical
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
<<<<<<< HEAD
  <component name="RunManager" selected="Python tests.Python tests for parse_test.TestLL1Parser">
    <configuration name="Python tests for parse_test.TestLL1ParseTable" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TurtleScriptV2" />
=======
  <component name="RunManager" selected="Python.main">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Compiladores" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/main.py" />
      <option name="PARAMETERS" value="tests/inputs/char_invalido.txt" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_tokenizer.TestLexicalTokenizer.test_first_symbol_is_number_error_with_analise_line" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Compiladores" />
>>>>>>> feat-lexical
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
<<<<<<< HEAD
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/parser" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;parse_test.TestLL1ParseTable&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for parse_test.TestLL1Parser" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TurtleScriptV2" />
=======
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_tokenizer.TestLexicalTokenizer.test_first_symbol_is_number_error_with_analise_line&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_tokenizer.TestLexicalTokenizer.test_list_token_and_symbols_with_analise_line" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Compiladores" />
>>>>>>> feat-lexical
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
<<<<<<< HEAD
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/parser" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;parse_test.TestLL1Parser&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for parse_test.TestLL1Parser.test_invalid_unexpected_symbol_on_stack" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TurtleScriptV2" />
=======
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_tokenizer.TestLexicalTokenizer.test_list_token_and_symbols_with_analise_line&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_tokenizer.TestLexicalTokenizer.test_number_delimiters_error_with_analise_line" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Compiladores" />
>>>>>>> feat-lexical
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
<<<<<<< HEAD
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/parser" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;parse_test.TestLL1Parser.test_invalid_unexpected_symbol_on_stack&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for parse_test.TestParseTreeGeneration" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TurtleScriptV2" />
=======
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_tokenizer.TestLexicalTokenizer.test_number_delimiters_error_with_analise_line&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_tokenizer.TestLexicalTokenizer.test_unknown_symbol_error_with_analise_line" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Compiladores" />
>>>>>>> feat-lexical
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
<<<<<<< HEAD
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/parser" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;parse_test.TestParseTreeGeneration&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for parse_test.TestParseTreeGeneration.test_valid_simple_expression_tree" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="TurtleScriptV2" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/parser" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;parse_test.TestParseTreeGeneration.test_valid_simple_expression_tree&quot;" />
=======
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_tokenizer.TestLexicalTokenizer.test_unknown_symbol_error_with_analise_line&quot;" />
>>>>>>> feat-lexical
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
<<<<<<< HEAD
      <item itemvalue="Python tests.Python tests for parse_test.TestLL1ParseTable" />
      <item itemvalue="Python tests.Python tests for parse_test.TestLL1Parser" />
      <item itemvalue="Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_unexpected_symbol_on_stack" />
      <item itemvalue="Python tests.Python tests for parse_test.TestParseTreeGeneration" />
      <item itemvalue="Python tests.Python tests for parse_test.TestParseTreeGeneration.test_valid_simple_expression_tree" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for parse_test.TestLL1Parser" />
        <item itemvalue="Python tests.Python tests for parse_test.TestLL1ParseTable" />
        <item itemvalue="Python tests.Python tests for parse_test.TestParseTreeGeneration.test_valid_simple_expression_tree" />
        <item itemvalue="Python tests.Python tests for parse_test.TestParseTreeGeneration" />
        <item itemvalue="Python tests.Python tests for parse_test.TestLL1Parser.test_invalid_unexpected_symbol_on_stack" />
=======
      <item itemvalue="Python.main" />
      <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_number_delimiters_error_with_analise_line" />
      <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_unknown_symbol_error_with_analise_line" />
      <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_first_symbol_is_number_error_with_analise_line" />
      <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_list_token_and_symbols_with_analise_line" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.main" />
        <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_list_token_and_symbols_with_analise_line" />
        <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_first_symbol_is_number_error_with_analise_line" />
        <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_unknown_symbol_error_with_analise_line" />
        <item itemvalue="Python tests.Python tests for test_tokenizer.TestLexicalTokenizer.test_number_delimiters_error_with_analise_line" />
>>>>>>> feat-lexical
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-PY-251.26094.141" />
        <option value="bundled-python-sdk-9f8e2b94138c-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26094.141" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d72477f0-37db-41d9-b150-784f5412d6f0" name="Changes" comment="" />
      <created>1751404704843</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1751404704843</updated>
      <workItem from="1751404705931" duration="627000" />
      <workItem from="1751405340081" duration="5817000" />
      <workItem from="1751937281898" duration="3089000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
<<<<<<< HEAD
=======
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
>>>>>>> feat-lexical
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
<<<<<<< HEAD
          <url>file://$PROJECT_DIR$/test/parser/calculate_follow_set_test.py</url>
          <line>41</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/TurtleScriptV2$.coverage" NAME=" Coverage Results" MODIFIED="1751989447404" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/TurtleScriptV2$main.coverage" NAME="main Coverage Results" MODIFIED="1751989153552" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
  </component>
=======
          <url>file://$PROJECT_DIR$/src/main.py</url>
          <line>11</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/test_tokenizer.py</url>
          <line>210</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/lexical_analyzer/utils/lexer.py</url>
          <line>29</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/main.py</url>
          <line>19</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/tests/test_tokenizer.py</url>
          <line>200</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
>>>>>>> feat-lexical
</project>